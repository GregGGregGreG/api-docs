components:
  schemas:

    check_types_settings:
      get:
        description: >-
          Get account check types settings.
        summary: Get account check types settings
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
          - $ref: '../tqc_common.yaml#/components/schemas/requestQueryParameter/targetLocaleId'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/TqcAccountGetCheckTypesResponse'
                example:
                  "response":
                    "code": "SUCCESS"
                    "data":
                      "totalCount": 22
                      "items":
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "LEADING_TRAILING_SPACES"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "ORIGINAL_EQUALS_TARGET"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "mustHaveIdenticalTags": true
                          "mustHaveIdenticalCapitalization": true
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "WHITESPACES"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "SPELLCHECK"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "skipIfWordInUserDictionary": true
                          "skipIfWordStartsWithCapitalLetter": false
                          "skipIfWordAppearsInSourceString": true
                          "skipIfWordValidInSourceLocale": false
                          "runSpellcheckForSubWords": false
#                        - "severityLevelCode": "LOW"
#                          "checkTypeCode": "UNCATEGORIZED"
#                          "subTypes": []
#                          "localeSeverityLevels": []
#                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TAG_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "TAG_ADDED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "TAG_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "TAG_ORDER_IS_CHANGED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "SPACES_AROUND_TAGS"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "allowExtraFormattingTags": true
                        - "severityLevelCode": "HIGH"
                          "checkTypeCode": "TARGET_LENGTH_LIMIT"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "NUMBER_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "NUMBER_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "NUMBER_ADDED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "NUMBER_INCORRECT_CONVERSION"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups":
                            - "groupUid": "b0dd258b05ee"
                            - "groupUid": "a853df2cf8ac"
                          "ignoreSign": true
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "REPEATED_WORD"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TARGET_IN_WRONG_LANGUAGE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "minTextLengthLimit": 40
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "SOURCE_IN_WRONG_LANGUAGE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "minTextLengthLimit": 40
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "SEGMENT_COMPLETENESS"
                          "subTypes":
                            - "checkSubTypeCode": "TARGET_IS_MUCH_SHORTER_THAN_SOURCE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "TARGET_IS_MUCH_LONGER_THAN_SOURCE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "TARGET_IS_EMPTY"
                              "severityLevelCode": "DISABLED"
                          "localeSeverityLevels": []
                          "groups": []
                          "lowerLengthThreshold": 50
                          "upperLengthThreshold": 250
                          "minLengthThreshold": 10
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "NON_TRANSLATABLE_TEXT"
                          "subTypes":
                            - "checkSubTypeCode": "PLACEABLE_DELETED"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "SPACES_AROUND_PLACEABLE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "PLACEABLE_ADDED"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "PLACEABLE_FORMAT"
                              "severityLevelCode": "MEDIUM"
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "EMOJI_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "EMOJI_PRESENT"
                              "severityLevelCode": "DISABLED"
                            - "checkSubTypeCode": "EMOJI_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "EMOJI_ADDED"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "noEmojisAllowedInTarget": false
#                        - "severityLevelCode": "HIGH"
#                          "checkTypeCode": "TAG_VALIDITY"
#                          "subTypes":
#                            - "checkSubTypeCode": "TAG_IS_CHANGED"
#                              "severityLevelCode": "HIGH"
#                            - "checkSubTypeCode": "INVALID_TAG_NESTING"
#                              "severityLevelCode": "HIGH"
#                            - "checkSubTypeCode": "OPEN_CLOSED_TAG_ORDER_IS_CHANGED"
#                              "severityLevelCode": "HIGH"
#                          "localeSeverityLevels": []
#                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "INSERTABLE_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "INSERTABLE_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "INSERTABLE_ADDED"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TARGET_SOURCE_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "SAME_TRANSLATION_DIFFERENT_SOURCES"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "SAME_SOURCE_DIFFERENT_TRANSLATIONS"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "ignoreTagsAndPlaceholders": true
                          "ignoreCase": true
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "BLACKLISTED_TERMS"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "GLOSSARY_COMPLIANCE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "matchMethod": "MATCH_BY_PERCENTAGE"
                          "matchThreshold": 50
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TRADEMARK_CONSISTENCY"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "GRAMMAR_CHECK"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "GLOBAL_CAPITALISATION_CONSISTENCY"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []

        x-code-samples:
          - lang: curl
            source: |
              curl -H "Authorization: Bearer $smartlingToken" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/check-types:

    account_check_types_settings_effective:
      get:
        description: >-
          Get account check type settings.
        summary: Get account check type settings
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
          - $ref: '../tqc_common.yaml#/components/schemas/pathParameters/checkTypeCode'
          - $ref: '../tqc_common.yaml#/components/schemas/requestQueryParameter/targetLocaleId'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/AccountCheckTypeEffectiveResponse'
                examples:
                  LEADING_TRAILING_SPACES:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "LEADING_TRAILING_SPACES"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  ORIGINAL_EQUALS_TARGET:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "ORIGINAL_EQUALS_TARGET"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []
                      "mustHaveIdenticalTags": true
                      "mustHaveIdenticalCapitalization": true

                  WHITESPACES:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "WHITESPACES"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  SPELLCHECK:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "SPELLCHECK"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []
                      "skipIfWordInUserDictionary": true
                      "skipIfWordStartsWithCapitalLetter": false
                      "skipIfWordAppearsInSourceString": true
                      "skipIfWordValidInSourceLocale": false
                      "runSpellcheckForSubWords": false

#                  UNCATEGORIZED:
#                    value:
#                      "severityLevelCode": "LOW"
#                      "checkTypeCode": "UNCATEGORIZED"
#                      "subTypes": []
#                      "localeSeverityLevels": []
#                      "groups": []

                  TAG_CONSISTENCY:
                    value:
                      "severityLevelCode": "HIGH"
                      "checkTypeCode": "TAG_CONSISTENCY"
                      "subTypes":
                        - "checkSubTypeCode": "TAG_ORDER_IS_CHANGED"
                          "severityLevelCode": "HIGH"
                        - "checkSubTypeCode": "TAG_ADDED"
                          "severityLevelCode": "HIGH"
                        - "checkSubTypeCode": "TAG_DELETED"
                          "severityLevelCode": "HIGH"
                        - "checkSubTypeCode": "SPACES_AROUND_TAGS"
                          "severityLevelCode": "HIGH"
                      "localeSeverityLevels": []
                      "groups": []

                  TARGET_LENGTH_LIMIT:
                    value:
                      "severityLevelCode": "HIGH"
                      "checkTypeCode": "TARGET_LENGTH_LIMIT"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  NUMBER_CONSISTENCY:
                    value:
                      "severityLevelCode": "DISABLED"
                      "checkTypeCode": "NUMBER_CONSISTENCY"
                      "subTypes":
                        - "checkSubTypeCode": "NUMBER_ADDED"
                          "severityLevelCode": "DISABLED"
                        - "checkSubTypeCode": "NUMBER_DELETED"
                          "severityLevelCode": "DISABLED"
                        - "checkSubTypeCode": "NUMBER_INCORRECT_CONVERSION"
                          "severityLevelCode": "DISABLED"
                      "localeSeverityLevels": []
                      "groups": []
                      "ignoreSign": true

                  REPEATED_WORD:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "REPEATED_WORD"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  TARGET_IN_WRONG_LANGUAGE:
                    value:
                      "severityLevelCode": "DISABLED"
                      "checkTypeCode": "TARGET_IN_WRONG_LANGUAGE"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []
                      "minTextLengthLimit": 40

                  SOURCE_IN_WRONG_LANGUAGE:
                    value:
                      "severityLevelCode": "DISABLED"
                      "checkTypeCode": "SOURCE_IN_WRONG_LANGUAGE"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []
                      "minTextLengthLimit": 40

                  SEGMENT_COMPLETENESS:
                    value:
                      "severityLevelCode": "MEDIUM"
                      "checkTypeCode": "SEGMENT_COMPLETENESS"
                      "subTypes":
                        - "checkSubTypeCode": "TARGET_IS_MUCH_LONGER_THAN_SOURCE"
                          "severityLevelCode": "MEDIUM"
                        - "checkSubTypeCode": "TARGET_IS_MUCH_SHORTER_THAN_SOURCE"
                          "severityLevelCode": "MEDIUM"
                        - "checkSubTypeCode": "TARGET_IS_EMPTY"
                          "severityLevelCode": "DISABLED"
                      "localeSeverityLevels": []
                      "groups": []
                      "lowerLengthThreshold": 50
                      "upperLengthThreshold": 250
                      "minLengthThreshold": 10

                  NON_TRANSLATABLE_TEXT:
                    value:
                      "severityLevelCode": "MEDIUM"
                      "checkTypeCode": "NON_TRANSLATABLE_TEXT"
                      "subTypes":
                        - "checkSubTypeCode": "PLACEABLE_DELETED"
                          "severityLevelCode": "MEDIUM"
                        - "checkSubTypeCode": "PLACEABLE_ADDED"
                          "severityLevelCode": "MEDIUM"
                        - "checkSubTypeCode": "SPACES_AROUND_PLACEABLE"
                          "severityLevelCode": "MEDIUM"
                        - "checkSubTypeCode": "PLACEABLE_FORMAT"
                          "severityLevelCode": "MEDIUM"
                      "localeSeverityLevels": []
                      "groups": []

                  EMOJI_CONSISTENCY:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "EMOJI_CONSISTENCY"
                      "subTypes":
                        - "checkSubTypeCode": "EMOJI_PRESENT"
                          "severityLevelCode": "LOW"
                        - "checkSubTypeCode": "EMOJI_DELETED"
                          "severityLevelCode": "DISABLED"
                        - "checkSubTypeCode": "EMOJI_ADDED"
                          "severityLevelCode": "LOW"
                      "localeSeverityLevels": []
                      "groups": []
                      "noEmojisAllowedInTarget": false

#                  TAG_VALIDITY:
#                    value:
#                      "severityLevelCode": "HIGH"
#                      "checkTypeCode": "TAG_VALIDITY"
#                      "subTypes":
#                        - "checkSubTypeCode": "OPEN_CLOSED_TAG_ORDER_IS_CHANGED"
#                          "severityLevelCode": "HIGH"
#                        - "checkSubTypeCode": "INVALID_TAG_NESTING"
#                          "severityLevelCode": "HIGH"
#                        - "checkSubTypeCode": "TAG_IS_CHANGED"
#                          "severityLevelCode": "HIGH"
#                      "localeSeverityLevels": []
#                      "groups": []

                  INSERTABLE_CONSISTENCY:
                    value:
                      "severityLevelCode": "DISABLED"
                      "checkTypeCode": "INSERTABLE_CONSISTENCY"
                      "subTypes":
                        - "checkSubTypeCode": "INSERTABLE_DELETED"
                          "severityLevelCode": "DISABLED"
                        - "checkSubTypeCode": "INSERTABLE_ADDED"
                          "severityLevelCode": "DISABLED"
                      "localeSeverityLevels": []
                      "groups": []

                  TARGET_SOURCE_CONSISTENCY:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "TARGET_SOURCE_CONSISTENCY"
                      "subTypes":
                        - "checkSubTypeCode": "SAME_SOURCE_DIFFERENT_TRANSLATIONS"
                          "severityLevelCode": "LOW"
                        - "checkSubTypeCode": "SAME_TRANSLATION_DIFFERENT_SOURCES"
                          "severityLevelCode": "LOW"
                      "localeSeverityLevels": []
                      "groups": []
                      "ignoreTagsAndPlaceholders": true
                      "ignoreCase": true

                  BLACKLISTED_TERMS:
                    value:
                      "severityLevelCode": "MEDIUM"
                      "checkTypeCode": "BLACKLISTED_TERMS"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  GLOSSARY_COMPLIANCE:
                    value:
                      "severityLevelCode": "DISABLED"
                      "checkTypeCode": "GLOSSARY_COMPLIANCE"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []
                      "matchMethod": "MATCH_BY_PERCENTAGE"
                      "matchThreshold": 50

                  TRADEMARK_CONSISTENCY:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "TRADEMARK_CONSISTENCY"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  GRAMMAR_CHECK:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "GRAMMAR_CHECK"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

                  GLOBAL_CAPITALISATION_CONSISTENCY:
                    value:
                      "severityLevelCode": "LOW"
                      "checkTypeCode": "GLOBAL_CAPITALISATION_CONSISTENCY"
                      "subTypes": []
                      "localeSeverityLevels": []
                      "groups": []

        x-code-samples:
          - lang: curl
            source: |
              curl -H "Authorization: Bearer $smartlingToken" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/check-types/$checkTypeCode

    check_types_checkType_settings:
      put:
        description: >-
          Update account check type settings.
        summary: Update account check type settings
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
          - $ref: '../tqc_common.yaml#/components/schemas/pathParameters/checkTypeCodeWithSettings'
        requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './emoji_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './spellcheck.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './number_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './target_source_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './glossary_compliance.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './original_equals_target.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './segment_completeness.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountCheckTypeApplySettingsResponse'
                examples:
                  EMOJI_CONSISTENCY:
                    value:
                      noEmojisAllowedInTarget: true
                  SPELLCHECK:
                    value:
                      skipIfWordInUserDictionary: false
                      skipIfWordStartsWithCapitalLetter: true
                      skipIfWordAppearsInSourceString: false
                      skipIfWordValidInSourceLocale: true
                      runSpellcheckForSubWords: true
                  SOURCE_IN_WRONG_LANGUAGE:
                    value:
                      minTextLengthLimit: 10
                  TARGET_IN_WRONG_LANGUAGE:
                    value:
                      minTextLengthLimit: 15
                  NUMBER_CONSISTENCY:
                    value:
                      ignoreSign: true
                  TARGET_SOURCE_CONSISTENCY:
                    value:
                      ignoreTagsAndPlaceholders: true
                      ignoreCase: true
                  GLOSSARY_COMPLIANCE:
                    value:
                      matchMethod: MATCH_BY_PERCENTAGE
                      matchThreshold: 10
                  ORIGINAL_EQUALS_TARGET:
                    value:
                      mustHaveIdenticalTags: false
                      mustHaveIdenticalCapitalization: false
                  SEGMENT_COMPLETENESS:
                    value:
                      lowerLengthThreshold: 10
                      upperLengthThreshold: 20
                      minLengthThreshold: 15

        x-code-samples:
          - lang: curl
            source: |
              curl -X PUT -H "Authorization: Bearer $smartlingToken" -d "$smartlingStringTQCJSON" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/$checkTypeCode/settings:

    check_types_checkType_group_settings:
      put:
        description: >-
          Update account check type group settings.
        summary: Update account check type group settings
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
          - $ref: '../tqc_common.yaml#/components/schemas/pathParameters/checkTypeCodeWithSettings'
          - $ref: '../tqc_common.yaml#/components/schemas/pathParameters/groupUid'
        requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './emoji_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './spellcheck.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './number_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './target_source_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './glossary_compliance.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './original_equals_target.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'
                  - $ref: './segment_completeness.yaml#/components/schemas/AccountCheckTypeApplySettingsRequest'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountCheckTypeApplyGroupSettingsResponse'
                examples:
                  EMOJI_CONSISTENCY:
                    value:
                      noEmojisAllowedInTarget: true
                  SPELLCHECK:
                    value:
                      skipIfWordInUserDictionary: false
                      skipIfWordStartsWithCapitalLetter: true
                      skipIfWordAppearsInSourceString: false
                      skipIfWordValidInSourceLocale: true
                      runSpellcheckForSubWords: true
                  SOURCE_IN_WRONG_LANGUAGE:
                    value:
                      minTextLengthLimit: 10
                  TARGET_IN_WRONG_LANGUAGE:
                    value:
                      minTextLengthLimit: 15
                  NUMBER_CONSISTENCY:
                    value:
                      ignoreSign: true
                  TARGET_SOURCE_CONSISTENCY:
                    value:
                      ignoreTagsAndPlaceholders: true
                      ignoreCase: true
                  GLOSSARY_COMPLIANCE:
                    value:
                      matchMethod: MATCH_BY_PERCENTAGE
                      matchThreshold: 10
                  ORIGINAL_EQUALS_TARGET:
                    value:
                      mustHaveIdenticalTags: false
                      mustHaveIdenticalCapitalization: false
                  SEGMENT_COMPLETENESS:
                    value:
                      lowerLengthThreshold: 10
                      upperLengthThreshold: 20
                      minLengthThreshold: 15

        x-code-samples:
          - lang: curl
            source: |
              curl -X PUT -H "Authorization: Bearer $smartlingToken" -d "$smartlingStringTQCJSON" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/$checkTypeCode/groups/{groupUid}/settings:

    AccountCheckTypeApplySettingsResponse:
      allOf:
        - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              oneOf:
                - $ref: './emoji_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './spellcheck.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './number_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './target_source_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './glossary_compliance.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './original_equals_target.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './segment_completeness.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'

    AccountCheckTypeApplyGroupSettingsResponse:
      allOf:
        - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              oneOf:
                - $ref: './emoji_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './spellcheck.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './number_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './target_source_consistency.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './glossary_compliance.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './original_equals_target.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'
                - $ref: './segment_completeness.yaml#/components/schemas/AccountCheckTypeApplySettingsDTOResponse'

    TqcAccountGetCheckTypesResponse:
      allOf:
        - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                totalCount:
                  type: integer
                  description: Total element count
                items:
                  type: array
                  items:
                    anyOf:
                      - $ref: 'blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      - $ref: 'tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      - $ref: 'uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'

    CheckTypeSettingBase:
      type: object
      required:
        - checkTypeCode
      discriminator:
        propertyName: checkTypeCode
        mapping:
          LEADING_TRAILING_SPACES: '#/components/schemas/LEADING_TRAILING_SPACES'
          ORIGINAL_EQUALS_TARGET: '#/components/schemas/ORIGINAL_EQUALS_TARGET'
          WHITESPACES: '#/components/schemas/WHITESPACES'
          SPELLCHECK: '#/components/schemas/SPELLCHECK'
#          UNCATEGORIZED: '#/components/schemas/UNCATEGORIZED'
          TAG_CONSISTENCY: '#/components/schemas/TAG_CONSISTENCY'
          TARGET_LENGTH_LIMIT: '#/components/schemas/TARGET_LENGTH_LIMIT'
          NUMBER_CONSISTENCY: '#/components/schemas/NUMBER_CONSISTENCY'
          REPEATED_WORD: '#/components/schemas/REPEATED_WORD'
          TARGET_IN_WRONG_LANGUAGE: '#/components/schemas/TARGET_IN_WRONG_LANGUAGE'
          SOURCE_IN_WRONG_LANGUAGE: '#/components/schemas/SOURCE_IN_WRONG_LANGUAGE'
          SEGMENT_COMPLETENESS: '#/components/schemas/SEGMENT_COMPLETENESS'
          NON_TRANSLATABLE_TEXT: '#/components/schemas/NON_TRANSLATABLE_TEXT'
          EMOJI_CONSISTENCY: '#/components/schemas/EMOJI_CONSISTENCY'
#          TAG_VALIDITY: '#/components/schemas/TAG_VALIDITY'
          INSERTABLE_CONSISTENCY: '#/components/schemas/INSERTABLE_CONSISTENCY'
          TARGET_SOURCE_CONSISTENCY: '#/components/schemas/TARGET_SOURCE_CONSISTENCY'
          BLACKLISTED_TERMS: '#/components/schemas/BLACKLISTED_TERMS'
          GLOSSARY_COMPLIANCE: '#/components/schemas/GLOSSARY_COMPLIANCE'
          TRADEMARK_CONSISTENCY: '#/components/schemas/TRADEMARK_CONSISTENCY'
          GRAMMAR_CHECK: '#/components/schemas/GRAMMAR_CHECK'
          GLOBAL_CAPITALISATION_CONSISTENCY: '#/components/schemas/GLOBAL_CAPITALISATION_CONSISTENCY'

    AccountCheckTypeEffectiveAbstractDTO:
      allOf:
        - type: object
          properties:
            checkTypeCode:
              type: string
              enum:
                - NONE
              description: check type code
              example: "NONE"

    AccountCheckTypeEffectiveResponse:
      allOf:
        - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              allOf:
                - $ref: '#/components/schemas/CheckTypeSettingBase'
                - $ref: '#/components/schemas/AccountCheckTypeEffectiveAbstractDTO'
