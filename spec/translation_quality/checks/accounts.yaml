components:
  schemas:

    check_types_settings:
      get:
        description: >-
          Get account check types settings.
        summary: Get account check types settings
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
          - $ref: '../tqc_common.yaml#/components/schemas/requestQueryParameter/targetLocaleId'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/TqcAccountGetCheckTypesResponse'
                example:
                  "response":
                    "code": "SUCCESS"
                    "data":
                      "totalCount": 22
                      "items":
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "LEADING_TRAILING_SPACES"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "ORIGINAL_EQUALS_TARGET"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "mustHaveIdenticalTags": true
                          "mustHaveIdenticalCapitalization": true
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "WHITESPACES"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "SPELLCHECK"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "skipIfWordInUserDictionary": true
                          "skipIfWordStartsWithCapitalLetter": false
                          "skipIfWordAppearsInSourceString": true
                          "skipIfWordValidInSourceLocale": false
                          "runSpellcheckForSubWords": false
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "UNCATEGORIZED"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TAG_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "TAG_ADDED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "TAG_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "TAG_ORDER_IS_CHANGED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "SPACES_AROUND_TAGS"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "allowExtraFormattingTags": true
                        - "severityLevelCode": "HIGH"
                          "checkTypeCode": "TARGET_LENGTH_LIMIT"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "NUMBER_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "NUMBER_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "NUMBER_ADDED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "NUMBER_INCORRECT_CONVERSION"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups":
                            - "groupUid": "b0dd258b05ee"
                            - "groupUid": "a853df2cf8ac"
                          "ignoreSign": true
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "REPEATED_WORD"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TARGET_IN_WRONG_LANGUAGE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "minTextLengthLimit": 40
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "SOURCE_IN_WRONG_LANGUAGE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "minTextLengthLimit": 40
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "SEGMENT_COMPLETENESS"
                          "subTypes":
                            - "checkSubTypeCode": "TARGET_IS_MUCH_SHORTER_THAN_SOURCE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "TARGET_IS_MUCH_LONGER_THAN_SOURCE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "TARGET_IS_EMPTY"
                              "severityLevelCode": "DISABLED"
                          "localeSeverityLevels": []
                          "groups": []
                          "lowerLengthThreshold": 50
                          "upperLengthThreshold": 250
                          "minLengthThreshold": 10
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "NON_TRANSLATABLE_TEXT"
                          "subTypes":
                            - "checkSubTypeCode": "PLACEABLE_DELETED"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "SPACES_AROUND_PLACEABLE"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "PLACEABLE_ADDED"
                              "severityLevelCode": "MEDIUM"
                            - "checkSubTypeCode": "PLACEABLE_FORMAT"
                              "severityLevelCode": "MEDIUM"
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "EMOJI_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "EMOJI_PRESENT"
                              "severityLevelCode": "DISABLED"
                            - "checkSubTypeCode": "EMOJI_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "EMOJI_ADDED"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "noEmojisAllowedInTarget": false
                        - "severityLevelCode": "HIGH"
                          "checkTypeCode": "TAG_VALIDITY"
                          "subTypes":
                            - "checkSubTypeCode": "TAG_IS_CHANGED"
                              "severityLevelCode": "HIGH"
                            - "checkSubTypeCode": "INVALID_TAG_NESTING"
                              "severityLevelCode": "HIGH"
                            - "checkSubTypeCode": "OPEN_CLOSED_TAG_ORDER_IS_CHANGED"
                              "severityLevelCode": "HIGH"
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "INSERTABLE_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "INSERTABLE_DELETED"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "INSERTABLE_ADDED"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TARGET_SOURCE_CONSISTENCY"
                          "subTypes":
                            - "checkSubTypeCode": "SAME_TRANSLATION_DIFFERENT_SOURCES"
                              "severityLevelCode": "LOW"
                            - "checkSubTypeCode": "SAME_SOURCE_DIFFERENT_TRANSLATIONS"
                              "severityLevelCode": "LOW"
                          "localeSeverityLevels": []
                          "groups": []
                          "ignoreTagsAndPlaceholders": true
                          "ignoreCase": true
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "BLACKLISTED_TERMS"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "MEDIUM"
                          "checkTypeCode": "GLOSSARY_COMPLIANCE"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                          "matchMethod": "MATCH_BY_PERCENTAGE"
                          "matchThreshold": 50
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "TRADEMARK_CONSISTENCY"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "GRAMMAR_CHECK"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []
                        - "severityLevelCode": "LOW"
                          "checkTypeCode": "GLOBAL_CAPITALISATION_CONSISTENCY"
                          "subTypes": []
                          "localeSeverityLevels": []
                          "groups": []

        x-code-samples:
          - lang: curl
            source: |
              curl -H "Authorization: Bearer $smartlingToken" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/check-types:

    account_check_types_settings_effective:
      get:
        description: >-
          test Get checktype settings for certain account.
        summary: test Get checktype settings for certain account
        tags:
          - Translation quality check
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: '../../api_common.yaml#/components/schemas/pathParameters/accountUid'
#          - $ref: '../tqc_common.yaml#/components/schemas/pathParameters/checkTypeCode'
          - name: checkTypeCode
            in: path
            schema:
              type: string
              enum:
                - LEADING_TRAILING_SPACES
                - ORIGINAL_EQUALS_TARGET
                - WHITESPACES
                - SPELLCHECK
                - UNCATEGORIZED
                - TAG_CONSISTENCY
                - TARGET_LENGTH_LIMIT
                - NUMBER_CONSISTENCY
                - REPEATED_WORD
                - TARGET_IN_WRONG_LANGUAGE
                - SOURCE_IN_WRONG_LANGUAGE
                - SEGMENT_COMPLETENESS
                - NON_TRANSLATABLE_TEXT
                - EMOJI_CONSISTENCY
                - TAG_VALIDITY
                - INSERTABLE_CONSISTENCY
                - TARGET_SOURCE_CONSISTENCY
                - BLACKLISTED_TERMS
                - GLOSSARY_COMPLIANCE
                - TRADEMARK_CONSISTENCY
                - GRAMMAR_CHECK
                - GLOBAL_CAPITALISATION_CONSISTENCY
            required: true
            description: pet type.

          - $ref: '../tqc_common.yaml#/components/schemas/requestQueryParameter/targetLocaleId'

        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/Cat'
                    - $ref: '#/components/schemas/Dog'
                  discriminator:
                    propertyName: checkTypeCode
                    mapping:
                      dog: '#/components/schemas/Dog'
                      cat: '#/components/schemas/Cat'

#                  oneOf:
#                    - $ref: 'leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                    - $ref: 'global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                  discriminator:
#                    propertyName: checkTypeCode
#                    mapping:
#                      LEADING_TRAILING_SPACES: 'leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      ORIGINAL_EQUALS_TARGET: 'original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      WHITESPACES: 'whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      SPELLCHECK: 'spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      UNCATEGORIZED: 'uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TAG_CONSISTENCY: 'tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TARGET_LENGTH_LIMIT: 'target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      NUMBER_CONSISTENCY: 'number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      REPEATED_WORD: 'repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TARGET_IN_WRONG_LANGUAGE: 'target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      SOURCE_IN_WRONG_LANGUAGE: 'source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      SEGMENT_COMPLETENESS: 'segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      NON_TRANSLATABLE_TEXT: 'non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      EMOJI_CONSISTENCY: 'emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TAG_VALIDITY: 'tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      INSERTABLE_CONSISTENCY: 'insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TARGET_SOURCE_CONSISTENCY: 'target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      BLACKLISTED_TERMS: 'blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      GLOSSARY_COMPLIANCE: 'glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      TRADEMARK_CONSISTENCY: 'trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      GRAMMAR_CHECK: 'grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#                      GLOBAL_CAPITALISATION_CONSISTENCY: 'global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'



        x-code-samples:
          - lang: curl
            source: |
              curl -H "Authorization: Bearer $smartlingToken" -H "Content-Type: application/json" https://api.smartling.com/translation-quality-api/v2/accounts/$smartlingAccountId/check-types/SPELLCHECK:

    TqcAccountGetCheckTypesResponse:
      allOf:
        - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                totalCount:
                  type: integer
                  description: Total element count
                items:
                  type: array
                  items:
                    anyOf:
                      - $ref: 'blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
                      - $ref: 'whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'

    CheckTypeSettingBase:
      type: object
      required:
        - checkTypeCode
      discriminator:
        propertyName: checkTypeCode
        mapping:
          LEADING_TRAILING_SPACES: '#/components/schemas/response/LEADING_TRAILING_SPACES'
          ORIGINAL_EQUALS_TARGET: '#/components/schemas/response/ORIGINAL_EQUALS_TARGET'

#          LEADING_TRAILING_SPACES: 'leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          ORIGINAL_EQUALS_TARGET: 'original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          WHITESPACES: 'whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          SPELLCHECK: 'spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          UNCATEGORIZED: 'uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TAG_CONSISTENCY: 'tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TARGET_LENGTH_LIMIT: 'target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          NUMBER_CONSISTENCY: 'number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          REPEATED_WORD: 'repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TARGET_IN_WRONG_LANGUAGE: 'target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          SOURCE_IN_WRONG_LANGUAGE: 'source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          SEGMENT_COMPLETENESS: 'segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          NON_TRANSLATABLE_TEXT: 'non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          EMOJI_CONSISTENCY: 'emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TAG_VALIDITY: 'tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          INSERTABLE_CONSISTENCY: 'insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TARGET_SOURCE_CONSISTENCY: 'target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          BLACKLISTED_TERMS: 'blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          GLOSSARY_COMPLIANCE: 'glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          TRADEMARK_CONSISTENCY: 'trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          GRAMMAR_CHECK: 'grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
#          GLOBAL_CAPITALISATION_CONSISTENCY: 'global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'

    Pet:
      type: object
      discriminator:
        propertyName: checkTypeCode
        mapping:
#          dog: '/spec/translation_quality/checks/accounts.yaml#/components/schemas/Dog'
#          cat: '/spec/translation_quality/checks/accounts.yaml#/components/schemas/Cat'
          dog: '#/components/schemas/Dog'
          cat: '#/components/schemas/Cat'
      properties:
        name:
          type: string
        checkTypeCode:
          type: string
      required:
        - name
        - checkTypeCode

    Cat:
      description: A representation of a cat
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            catName:
              type: string
              description: The cat name
          required:
            - catName

    Dog:
      description: A representation of a Dog
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            dogName:
              type: string
              description: The dog name
          required:
            - dogName

    testSchema:
      oneOf:
        - $ref: '#/components/schemas/Dog'
        - $ref: '#/components/schemas/Cat'
      discriminator:
        propertyName: checkTypeCode
        mapping:
          dog: '#/components/schemas/Dog'
          cat: '#/components/schemas/Cat'
